/* lonbon_webserviceStub.h
   Generated by gSOAP 2.8.12 from ..\include\lonbon_webservice.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef lonbon_webserviceStub_H
#define lonbon_webserviceStub_H
#ifndef _LONBON_WEBSERVICE_H_
#define _LONBON_WEBSERVICE_H_
#endif /*_LONBON_WEBSERVICE_H_*/
#include "stdsoap2.h"
#if GSOAP_VERSION != 20812
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE__Enum_1
#define SOAP_TYPE__Enum_1 (11)
/* Enum-1 */
enum _Enum_1 {false_ = 0, true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (16)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_lb__wsPingResponse
#define SOAP_TYPE_lb__wsPingResponse (22)
/* lb:wsPingResponse */
struct lb__wsPingResponse
{
	int *pingok;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__wsPing
#define SOAP_TYPE_lb__wsPing (23)
/* lb:wsPing */
struct lb__wsPing
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__Pair
#define SOAP_TYPE_lb__Pair (24)
/* lb:Pair */
struct lb__Pair
{
	char *key;	/* optional element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_PairArray
#define SOAP_TYPE_LB_PairArray (25)
/* LB-PairArray */
struct LB_PairArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Pair *__ptr;
};
#endif

#ifndef SOAP_TYPE_LB_PairArrayArray
#define SOAP_TYPE_LB_PairArrayArray (27)
/* LB-PairArrayArray */
struct LB_PairArrayArray
{
	int __size;	/* sequence of elements <item> */
	struct LB_PairArray *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__Response
#define SOAP_TYPE_lb__Response (29)
/* lb:Response */
struct lb__Response
{
	struct LB_PairArray *resp;	/* optional element of type LB-PairArray */
	struct LB_PairArrayArray *events;	/* optional element of type LB-PairArrayArray */
};
#endif

#ifndef SOAP_TYPE_lb__actionResponse
#define SOAP_TYPE_lb__actionResponse (34)
/* lb:actionResponse */
struct lb__actionResponse
{
	struct lb__Response **resp;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:Response */
};
#endif

#ifndef SOAP_TYPE_lb__action
#define SOAP_TYPE_lb__action (35)
/* lb:action */
struct lb__action
{
	struct LB_PairArray *cmd;	/* optional element of type LB-PairArray */
};
#endif

#ifndef SOAP_TYPE_lb__SystemInfo
#define SOAP_TYPE_lb__SystemInfo (36)
/* lb:SystemInfo */
struct lb__SystemInfo
{
	wchar_t *name;	/* optional element of type xsd:wstring */
	char *model;	/* optional element of type xsd:string */
	char *sn;	/* optional element of type xsd:string */
	char *hard_version;	/* optional element of type xsd:string */
	char *soft_version;	/* optional element of type xsd:string */
	char *kernel_version;	/* optional element of type xsd:string */
	char *mac;	/* optional element of type xsd:string */
	char *ip;	/* optional element of type xsd:string */
	char *netmask;	/* optional element of type xsd:string */
	char *gateway;	/* optional element of type xsd:string */
	char *dns1;	/* optional element of type xsd:string */
	char *dns2;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__getSystemInfoResponse
#define SOAP_TYPE_lb__getSystemInfoResponse (40)
/* lb:getSystemInfoResponse */
struct lb__getSystemInfoResponse
{
	struct lb__SystemInfo **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:SystemInfo */
};
#endif

#ifndef SOAP_TYPE_lb__getSystemInfo
#define SOAP_TYPE_lb__getSystemInfo (41)
/* lb:getSystemInfo */
struct lb__getSystemInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__CallLog
#define SOAP_TYPE_lb__CallLog (42)
/* lb:CallLog */
struct lb__CallLog
{
	int master_number;	/* required element of type xsd:int */
	int slave_number;	/* required element of type xsd:int */
	wchar_t *calling_status;	/* optional element of type xsd:wstring */
	char *calling_begin;	/* optional element of type xsd:string */
	char *calling_time;	/* optional element of type xsd:string */
	char *talking_begin;	/* optional element of type xsd:string */
	char *talking_time;	/* optional element of type xsd:string */
	char *recording_file;	/* optional element of type xsd:string */
	wchar_t *description;	/* optional element of type xsd:wstring */
};
#endif

#ifndef SOAP_TYPE_LB_CallLogArray
#define SOAP_TYPE_LB_CallLogArray (43)
/* LB-CallLogArray */
struct LB_CallLogArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__CallLog *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__CallLogInfoResponse
#define SOAP_TYPE_lb__CallLogInfoResponse (45)
/* lb:CallLogInfoResponse */
struct lb__CallLogInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_CallLogArray *data;	/* optional element of type LB-CallLogArray */
};
#endif

#ifndef SOAP_TYPE_lb__CallLogQuery
#define SOAP_TYPE_lb__CallLogQuery (47)
/* lb:CallLogQuery */
struct lb__CallLogQuery
{
	int master_number;	/* required element of type xsd:int */
	int slave_number;	/* required element of type xsd:int */
	char *date_from;	/* optional element of type xsd:string */
	char *date_to;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__getCallLogInfoResponse
#define SOAP_TYPE_lb__getCallLogInfoResponse (52)
/* lb:getCallLogInfoResponse */
struct lb__getCallLogInfoResponse
{
	struct lb__CallLogInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:CallLogInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getCallLogInfo
#define SOAP_TYPE_lb__getCallLogInfo (53)
/* lb:getCallLogInfo */
struct lb__getCallLogInfo
{
	struct lb__CallLogQuery *query;	/* optional element of type lb:CallLogQuery */
};
#endif

#ifndef SOAP_TYPE_lb__Item
#define SOAP_TYPE_lb__Item (54)
/* lb:Item */
struct lb__Item
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_ItemArray
#define SOAP_TYPE_LB_ItemArray (55)
/* LB-ItemArray */
struct LB_ItemArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Item *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__ItemInfoResponse
#define SOAP_TYPE_lb__ItemInfoResponse (57)
/* lb:ItemInfoResponse */
struct lb__ItemInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_ItemArray *data;	/* optional element of type LB-ItemArray */
};
#endif

#ifndef SOAP_TYPE_lb__InspPatient
#define SOAP_TYPE_lb__InspPatient (59)
/* lb:InspPatient */
struct lb__InspPatient
{
	char *charge_code;	/* optional element of type xsd:string */
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *abbr;	/* optional element of type xsd:string */
	char *item_code;	/* optional element of type xsd:string */
	char *device_code;	/* optional element of type xsd:string */
	char *last_modify;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_InspPatientArray
#define SOAP_TYPE_LB_InspPatientArray (60)
/* LB-InspPatientArray */
struct LB_InspPatientArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__InspPatient *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InspPatientInfoResponse
#define SOAP_TYPE_lb__InspPatientInfoResponse (62)
/* lb:InspPatientInfoResponse */
struct lb__InspPatientInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InspPatientArray *data;	/* optional element of type LB-InspPatientArray */
	char *last_query_time;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__InspRoom
#define SOAP_TYPE_lb__InspRoom (64)
/* lb:InspRoom */
struct lb__InspRoom
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_InspRoomArray
#define SOAP_TYPE_LB_InspRoomArray (65)
/* LB-InspRoomArray */
struct LB_InspRoomArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__InspRoom *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InspRoomInfoResponse
#define SOAP_TYPE_lb__InspRoomInfoResponse (67)
/* lb:InspRoomInfoResponse */
struct lb__InspRoomInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InspRoomArray *data;	/* optional element of type LB-InspRoomArray */
};
#endif

#ifndef SOAP_TYPE_lb__InspDevice
#define SOAP_TYPE_lb__InspDevice (69)
/* lb:InspDevice */
struct lb__InspDevice
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_InspDeviceArray
#define SOAP_TYPE_LB_InspDeviceArray (70)
/* LB-InspDeviceArray */
struct LB_InspDeviceArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__InspDevice *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InspDeviceInfoResponse
#define SOAP_TYPE_lb__InspDeviceInfoResponse (72)
/* lb:InspDeviceInfoResponse */
struct lb__InspDeviceInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InspDeviceArray *data;	/* optional element of type LB-InspDeviceArray */
};
#endif

#ifndef SOAP_TYPE_lb__Department
#define SOAP_TYPE_lb__Department (74)
/* lb:Department */
struct lb__Department
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *abbr;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_DepartmentArray
#define SOAP_TYPE_LB_DepartmentArray (75)
/* LB-DepartmentArray */
struct LB_DepartmentArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Department *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__DepartmentInfoResponse
#define SOAP_TYPE_lb__DepartmentInfoResponse (77)
/* lb:DepartmentInfoResponse */
struct lb__DepartmentInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_DepartmentArray *data;	/* optional element of type LB-DepartmentArray */
};
#endif

#ifndef SOAP_TYPE_lb__Type
#define SOAP_TYPE_lb__Type (79)
/* lb:Type */
struct lb__Type
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *abbr;	/* optional element of type xsd:string */
	char *department_code;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_TypeArray
#define SOAP_TYPE_LB_TypeArray (80)
/* LB-TypeArray */
struct LB_TypeArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Type *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__TypeInfoResponse
#define SOAP_TYPE_lb__TypeInfoResponse (82)
/* lb:TypeInfoResponse */
struct lb__TypeInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_TypeArray *data;	/* optional element of type LB-TypeArray */
};
#endif

#ifndef SOAP_TYPE_lb__Doctor
#define SOAP_TYPE_lb__Doctor (84)
/* lb:Doctor */
struct lb__Doctor
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *abbr;	/* optional element of type xsd:string */
	char *username;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
	char *department_code;	/* optional element of type xsd:string */
	char *title;	/* optional element of type xsd:string */
	char *sex;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_DoctorArray
#define SOAP_TYPE_LB_DoctorArray (85)
/* LB-DoctorArray */
struct LB_DoctorArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Doctor *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__DoctorInfoResponse
#define SOAP_TYPE_lb__DoctorInfoResponse (87)
/* lb:DoctorInfoResponse */
struct lb__DoctorInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_DoctorArray *data;	/* optional element of type LB-DoctorArray */
};
#endif

#ifndef SOAP_TYPE_lb__Nurse
#define SOAP_TYPE_lb__Nurse (89)
/* lb:Nurse */
struct lb__Nurse
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *title;	/* optional element of type xsd:string */
	char *sex;	/* optional element of type xsd:string */
	char *department_code;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_NurseArray
#define SOAP_TYPE_LB_NurseArray (90)
/* LB-NurseArray */
struct LB_NurseArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Nurse *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__NurseInfoResponse
#define SOAP_TYPE_lb__NurseInfoResponse (92)
/* lb:NurseInfoResponse */
struct lb__NurseInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_NurseArray *data;	/* optional element of type LB-NurseArray */
};
#endif

#ifndef SOAP_TYPE_lb__Duty
#define SOAP_TYPE_lb__Duty (94)
/* lb:Duty */
struct lb__Duty
{
	char *doctor_code;	/* optional element of type xsd:string */
	int dayofweek;	/* required element of type xsd:int */
	int timeofday;	/* required element of type xsd:int */
	char *type_code;	/* optional element of type xsd:string */
	int room_number;	/* required element of type xsd:int */
	char *room_name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_DutyArray
#define SOAP_TYPE_LB_DutyArray (95)
/* LB-DutyArray */
struct LB_DutyArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Duty *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__DutyInfoResponse
#define SOAP_TYPE_lb__DutyInfoResponse (97)
/* lb:DutyInfoResponse */
struct lb__DutyInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_DutyArray *data;	/* optional element of type LB-DutyArray */
};
#endif

#ifndef SOAP_TYPE_lb__Patient
#define SOAP_TYPE_lb__Patient (99)
/* lb:Patient */
struct lb__Patient
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *abbr;	/* optional element of type xsd:string */
	char *type_code;	/* optional element of type xsd:string */
	char *department_code;	/* optional element of type xsd:string */
	char *doctor_code;	/* optional element of type xsd:string */
	char *ticket_number;	/* optional element of type xsd:string */
	int ticket_order;	/* required element of type xsd:int */
	char *ticket_time;	/* optional element of type xsd:string */
	char *register_time;	/* optional element of type xsd:string */
	char *last_modify;	/* optional element of type xsd:string */
	char *sn;	/* optional element of type xsd:string */
	char *sex;	/* optional element of type xsd:string */
	char *sscard;	/* optional element of type xsd:string */
	int state;	/* required element of type xsd:int */
	char *type_name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_PatientArray
#define SOAP_TYPE_LB_PatientArray (100)
/* LB-PatientArray */
struct LB_PatientArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Patient *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__PatientInfoResponse
#define SOAP_TYPE_lb__PatientInfoResponse (102)
/* lb:PatientInfoResponse */
struct lb__PatientInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_PatientArray *data;	/* optional element of type LB-PatientArray */
	char *last_query_time;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__InpatientKey
#define SOAP_TYPE_lb__InpatientKey (104)
/* lb:InpatientKey */
struct lb__InpatientKey
{
	char *number;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_InpatientKeyArray
#define SOAP_TYPE_LB_InpatientKeyArray (105)
/* LB-InpatientKeyArray */
struct LB_InpatientKeyArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__InpatientKey *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InpatientKeyInfoResponse
#define SOAP_TYPE_lb__InpatientKeyInfoResponse (107)
/* lb:InpatientKeyInfoResponse */
struct lb__InpatientKeyInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InpatientKeyArray *data;	/* optional element of type LB-InpatientKeyArray */
};
#endif

#ifndef SOAP_TYPE_lb__getDepartmentInfoResponse
#define SOAP_TYPE_lb__getDepartmentInfoResponse (112)
/* lb:getDepartmentInfoResponse */
struct lb__getDepartmentInfoResponse
{
	struct lb__DepartmentInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:DepartmentInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getDepartmentInfo
#define SOAP_TYPE_lb__getDepartmentInfo (113)
/* lb:getDepartmentInfo */
struct lb__getDepartmentInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getTypeInfoResponse
#define SOAP_TYPE_lb__getTypeInfoResponse (117)
/* lb:getTypeInfoResponse */
struct lb__getTypeInfoResponse
{
	struct lb__TypeInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:TypeInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getTypeInfo
#define SOAP_TYPE_lb__getTypeInfo (118)
/* lb:getTypeInfo */
struct lb__getTypeInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getDoctorInfoResponse
#define SOAP_TYPE_lb__getDoctorInfoResponse (122)
/* lb:getDoctorInfoResponse */
struct lb__getDoctorInfoResponse
{
	struct lb__DoctorInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:DoctorInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getDoctorInfo
#define SOAP_TYPE_lb__getDoctorInfo (123)
/* lb:getDoctorInfo */
struct lb__getDoctorInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getNurseInfoResponse
#define SOAP_TYPE_lb__getNurseInfoResponse (127)
/* lb:getNurseInfoResponse */
struct lb__getNurseInfoResponse
{
	struct lb__NurseInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:NurseInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getNurseInfo
#define SOAP_TYPE_lb__getNurseInfo (128)
/* lb:getNurseInfo */
struct lb__getNurseInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getDutyInfoResponse
#define SOAP_TYPE_lb__getDutyInfoResponse (132)
/* lb:getDutyInfoResponse */
struct lb__getDutyInfoResponse
{
	struct lb__DutyInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:DutyInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getDutyInfo
#define SOAP_TYPE_lb__getDutyInfo (133)
/* lb:getDutyInfo */
struct lb__getDutyInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getPatientInfoResponse
#define SOAP_TYPE_lb__getPatientInfoResponse (137)
/* lb:getPatientInfoResponse */
struct lb__getPatientInfoResponse
{
	struct lb__PatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:PatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getPatientInfo
#define SOAP_TYPE_lb__getPatientInfo (138)
/* lb:getPatientInfo */
struct lb__getPatientInfo
{
	char *last_query_time;	/* optional element of type xsd:string */
	char *department_list;	/* optional element of type xsd:string */
	int department_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getItemInfoResponse
#define SOAP_TYPE_lb__getItemInfoResponse (142)
/* lb:getItemInfoResponse */
struct lb__getItemInfoResponse
{
	struct lb__ItemInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:ItemInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getItemInfo
#define SOAP_TYPE_lb__getItemInfo (143)
/* lb:getItemInfo */
struct lb__getItemInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getInspPatientInfoResponse
#define SOAP_TYPE_lb__getInspPatientInfoResponse (147)
/* lb:getInspPatientInfoResponse */
struct lb__getInspPatientInfoResponse
{
	struct lb__InspPatientInfoResponse **InspPatientInfo;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InspPatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getInspPatientInfo
#define SOAP_TYPE_lb__getInspPatientInfo (148)
/* lb:getInspPatientInfo */
struct lb__getInspPatientInfo
{
	char *last_query_time;	/* optional element of type xsd:string */
	char *item_list;	/* optional element of type xsd:string */
	int item_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getInspRoomInfoResponse
#define SOAP_TYPE_lb__getInspRoomInfoResponse (152)
/* lb:getInspRoomInfoResponse */
struct lb__getInspRoomInfoResponse
{
	struct lb__InspRoomInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InspRoomInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getInspRoomInfo
#define SOAP_TYPE_lb__getInspRoomInfo (153)
/* lb:getInspRoomInfo */
struct lb__getInspRoomInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getInspDeviceInfoResponse
#define SOAP_TYPE_lb__getInspDeviceInfoResponse (157)
/* lb:getInspDeviceInfoResponse */
struct lb__getInspDeviceInfoResponse
{
	struct lb__InspDeviceInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InspDeviceInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getInspDeviceInfo
#define SOAP_TYPE_lb__getInspDeviceInfo (158)
/* lb:getInspDeviceInfo */
struct lb__getInspDeviceInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__getInpatientKeyInfoResponse
#define SOAP_TYPE_lb__getInpatientKeyInfoResponse (162)
/* lb:getInpatientKeyInfoResponse */
struct lb__getInpatientKeyInfoResponse
{
	struct lb__InpatientKeyInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientKeyInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getInpatientKeyInfo
#define SOAP_TYPE_lb__getInpatientKeyInfo (163)
/* lb:getInpatientKeyInfo */
struct lb__getInpatientKeyInfo
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__Inpatient
#define SOAP_TYPE_lb__Inpatient (164)
/* lb:Inpatient */
struct lb__Inpatient
{
	char *code;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *abbr;	/* optional element of type xsd:string */
	int sex;	/* required element of type xsd:int */
	char *birthday;	/* optional element of type xsd:string */
	char *checkin_date;	/* optional element of type xsd:string */
	char *checkout_date;	/* optional element of type xsd:string */
	int zone_number;	/* required element of type xsd:int */
	char *room_number;	/* optional element of type xsd:string */
	char *bed_number;	/* optional element of type xsd:string */
	char *doctor;	/* optional element of type xsd:string */
	int care_level;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *note;	/* optional element of type xsd:string */
	char *last_modify;	/* optional element of type xsd:string */
	char *v1;	/* optional element of type xsd:string */
	char *v2;	/* optional element of type xsd:string */
	char *v3;	/* optional element of type xsd:string */
	char *v4;	/* optional element of type xsd:string */
	char *v5;	/* optional element of type xsd:string */
	char *v6;	/* optional element of type xsd:string */
	char *v7;	/* optional element of type xsd:string */
	char *v8;	/* optional element of type xsd:string */
	char *v9;	/* optional element of type xsd:string */
	char *v10;	/* optional element of type xsd:string */
	char *v11;	/* optional element of type xsd:string */
	char *v12;	/* optional element of type xsd:string */
	char *v13;	/* optional element of type xsd:string */
	char *v14;	/* optional element of type xsd:string */
	char *v15;	/* optional element of type xsd:string */
	char *v16;	/* optional element of type xsd:string */
	char *v17;	/* optional element of type xsd:string */
	char *v18;	/* optional element of type xsd:string */
	char *v19;	/* optional element of type xsd:string */
	char *v20;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_InpatientArray
#define SOAP_TYPE_LB_InpatientArray (165)
/* LB-InpatientArray */
struct LB_InpatientArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__Inpatient *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InpatientInfoResponse
#define SOAP_TYPE_lb__InpatientInfoResponse (167)
/* lb:InpatientInfoResponse */
struct lb__InpatientInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InpatientArray *data;	/* optional element of type LB-InpatientArray */
	char *last_query_time;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__InpatientIdInfo
#define SOAP_TYPE_lb__InpatientIdInfo (169)
/* lb:InpatientIdInfo */
struct lb__InpatientIdInfo
{
	char *code;	/* optional element of type xsd:string */
	char *room_number;	/* optional element of type xsd:string */
	char *bed_number;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_InpatientIdArray
#define SOAP_TYPE_LB_InpatientIdArray (170)
/* LB-InpatientIdArray */
struct LB_InpatientIdArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__InpatientIdInfo *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InpatientIdResponse
#define SOAP_TYPE_lb__InpatientIdResponse (172)
/* lb:InpatientIdResponse */
struct lb__InpatientIdResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InpatientIdArray *data;	/* optional element of type LB-InpatientIdArray */
	char *last_query_time;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__getInpatientInfoResponse
#define SOAP_TYPE_lb__getInpatientInfoResponse (177)
/* lb:getInpatientInfoResponse */
struct lb__getInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getInpatientInfo
#define SOAP_TYPE_lb__getInpatientInfo (178)
/* lb:getInpatientInfo */
struct lb__getInpatientInfo
{
	char *last_query_time;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__getZoneInpatientInfoResponse
#define SOAP_TYPE_lb__getZoneInpatientInfoResponse (180)
/* lb:getZoneInpatientInfoResponse */
struct lb__getZoneInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getZoneInpatientInfo
#define SOAP_TYPE_lb__getZoneInpatientInfo (181)
/* lb:getZoneInpatientInfo */
struct lb__getZoneInpatientInfo
{
	char *last_query_time;	/* optional element of type xsd:string */
	int zone_number;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getRoomInpatientInfoResponse
#define SOAP_TYPE_lb__getRoomInpatientInfoResponse (183)
/* lb:getRoomInpatientInfoResponse */
struct lb__getRoomInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getRoomInpatientInfo
#define SOAP_TYPE_lb__getRoomInpatientInfo (184)
/* lb:getRoomInpatientInfo */
struct lb__getRoomInpatientInfo
{
	char *last_query_time;	/* optional element of type xsd:string */
	int zone_number;	/* required element of type xsd:int */
	char *room_number_list;	/* optional element of type xsd:string */
	int room_number_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getBedInpatientInfoResponse
#define SOAP_TYPE_lb__getBedInpatientInfoResponse (186)
/* lb:getBedInpatientInfoResponse */
struct lb__getBedInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getBedInpatientInfo
#define SOAP_TYPE_lb__getBedInpatientInfo (187)
/* lb:getBedInpatientInfo */
struct lb__getBedInpatientInfo
{
	char *last_query_time;	/* optional element of type xsd:string */
	int zone_number;	/* required element of type xsd:int */
	char *bed_number_list;	/* optional element of type xsd:string */
	int bed_number_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getZoneAllInpatientInfoResponse
#define SOAP_TYPE_lb__getZoneAllInpatientInfoResponse (189)
/* lb:getZoneAllInpatientInfoResponse */
struct lb__getZoneAllInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getZoneAllInpatientInfo
#define SOAP_TYPE_lb__getZoneAllInpatientInfo (190)
/* lb:getZoneAllInpatientInfo */
struct lb__getZoneAllInpatientInfo
{
	int zone_number;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getAllRoomInpatientInfoResponse
#define SOAP_TYPE_lb__getAllRoomInpatientInfoResponse (192)
/* lb:getAllRoomInpatientInfoResponse */
struct lb__getAllRoomInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getAllRoomInpatientInfo
#define SOAP_TYPE_lb__getAllRoomInpatientInfo (193)
/* lb:getAllRoomInpatientInfo */
struct lb__getAllRoomInpatientInfo
{
	int zone_number;	/* required element of type xsd:int */
	char *room_number_list;	/* optional element of type xsd:string */
	int room_number_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getAllBedInpatientInfoResponse
#define SOAP_TYPE_lb__getAllBedInpatientInfoResponse (195)
/* lb:getAllBedInpatientInfoResponse */
struct lb__getAllBedInpatientInfoResponse
{
	struct lb__InpatientInfoResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientInfoResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getAllBedInpatientInfo
#define SOAP_TYPE_lb__getAllBedInpatientInfo (196)
/* lb:getAllBedInpatientInfo */
struct lb__getAllBedInpatientInfo
{
	int zone_number;	/* required element of type xsd:int */
	char *bed_number_list;	/* optional element of type xsd:string */
	int bed_number_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getZoneAllInpatientIdResponse
#define SOAP_TYPE_lb__getZoneAllInpatientIdResponse (200)
/* lb:getZoneAllInpatientIdResponse */
struct lb__getZoneAllInpatientIdResponse
{
	struct lb__InpatientIdResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientIdResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getZoneAllInpatientId
#define SOAP_TYPE_lb__getZoneAllInpatientId (201)
/* lb:getZoneAllInpatientId */
struct lb__getZoneAllInpatientId
{
	int zone_number;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getAllRoomInpatientIdResponse
#define SOAP_TYPE_lb__getAllRoomInpatientIdResponse (203)
/* lb:getAllRoomInpatientIdResponse */
struct lb__getAllRoomInpatientIdResponse
{
	struct lb__InpatientIdResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientIdResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getAllRoomInpatientId
#define SOAP_TYPE_lb__getAllRoomInpatientId (204)
/* lb:getAllRoomInpatientId */
struct lb__getAllRoomInpatientId
{
	int zone_number;	/* required element of type xsd:int */
	char *room_number_list;	/* optional element of type xsd:string */
	int room_number_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__getAllBedInpatientIdResponse
#define SOAP_TYPE_lb__getAllBedInpatientIdResponse (206)
/* lb:getAllBedInpatientIdResponse */
struct lb__getAllBedInpatientIdResponse
{
	struct lb__InpatientIdResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:InpatientIdResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getAllBedInpatientId
#define SOAP_TYPE_lb__getAllBedInpatientId (207)
/* lb:getAllBedInpatientId */
struct lb__getAllBedInpatientId
{
	int zone_number;	/* required element of type xsd:int */
	char *bed_number_list;	/* optional element of type xsd:string */
	int bed_number_size;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__InpatientAdditionalInfo
#define SOAP_TYPE_lb__InpatientAdditionalInfo (208)
/* lb:InpatientAdditionalInfo */
struct lb__InpatientAdditionalInfo
{
	int masterNum;	/* required element of type xsd:int */
	int childNum;	/* required element of type xsd:int */
	int type;	/* required element of type xsd:int */
	int measure;	/* required element of type xsd:int */
	int diet;	/* required element of type xsd:int */
	int isolation;	/* required element of type xsd:int */
	int allergy;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_lb__InpatientlistInfo
#define SOAP_TYPE_lb__InpatientlistInfo (209)
/* lb:InpatientlistInfo */
struct lb__InpatientlistInfo
{
	int id;	/* required element of type xsd:int */
	struct lb__Inpatient *base_info;	/* optional element of type lb:Inpatient */
	struct lb__InpatientAdditionalInfo *additional_info;	/* optional element of type lb:InpatientAdditionalInfo */
};
#endif

#ifndef SOAP_TYPE_LB_InpatientlistArray
#define SOAP_TYPE_LB_InpatientlistArray (212)
/* LB-InpatientlistArray */
struct LB_InpatientlistArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__InpatientlistInfo *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__InpatientlistInfoResponse
#define SOAP_TYPE_lb__InpatientlistInfoResponse (214)
/* lb:InpatientlistInfoResponse */
struct lb__InpatientlistInfoResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_InpatientlistArray *data;	/* optional element of type LB-InpatientlistArray */
};
#endif

#ifndef SOAP_TYPE_lb__DashboardDataInfo
#define SOAP_TYPE_lb__DashboardDataInfo (216)
/* lb:DashboardDataInfo */
struct lb__DashboardDataInfo
{
	int area;	/* required element of type xsd:int */
	char *title;	/* optional element of type xsd:string */
	char *k1;	/* optional element of type xsd:string */
	char *v1;	/* optional element of type xsd:string */
	char *k2;	/* optional element of type xsd:string */
	char *v2;	/* optional element of type xsd:string */
	char *k3;	/* optional element of type xsd:string */
	char *v3;	/* optional element of type xsd:string */
	char *k4;	/* optional element of type xsd:string */
	char *v4;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_LB_DashboardDataArray
#define SOAP_TYPE_LB_DashboardDataArray (217)
/* LB-DashboardDataArray */
struct LB_DashboardDataArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__DashboardDataInfo *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__DashboardDataResponse
#define SOAP_TYPE_lb__DashboardDataResponse (219)
/* lb:DashboardDataResponse */
struct lb__DashboardDataResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct LB_DashboardDataArray *data;	/* optional element of type LB-DashboardDataArray */
};
#endif

#ifndef SOAP_TYPE_lb__getAllDashboardDataResponse
#define SOAP_TYPE_lb__getAllDashboardDataResponse (224)
/* lb:getAllDashboardDataResponse */
struct lb__getAllDashboardDataResponse
{
	struct lb__DashboardDataResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:DashboardDataResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getAllDashboardData
#define SOAP_TYPE_lb__getAllDashboardData (225)
/* lb:getAllDashboardData */
struct lb__getAllDashboardData
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_lb__DashboardMessageInfo
#define SOAP_TYPE_lb__DashboardMessageInfo (226)
/* lb:DashboardMessageInfo */
struct lb__DashboardMessageInfo
{
	char *title;	/* optional element of type xsd:string */
	char *message;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_lb__DashboardMessageArray
#define SOAP_TYPE_lb__DashboardMessageArray (227)
/* lb:DashboardMessageArray */
struct lb__DashboardMessageArray
{
	int __size;	/* sequence of elements <item> */
	struct lb__DashboardMessageInfo *__ptr;
};
#endif

#ifndef SOAP_TYPE_lb__DashboardMessageResponse
#define SOAP_TYPE_lb__DashboardMessageResponse (229)
/* lb:DashboardMessageResponse */
struct lb__DashboardMessageResponse
{
	int code;	/* required element of type xsd:int */
	char *msg;	/* optional element of type xsd:string */
	struct lb__DashboardMessageArray *data;	/* optional element of type lb:DashboardMessageArray */
};
#endif

#ifndef SOAP_TYPE_lb__getAllDashboardMessageResponse
#define SOAP_TYPE_lb__getAllDashboardMessageResponse (234)
/* lb:getAllDashboardMessageResponse */
struct lb__getAllDashboardMessageResponse
{
	struct lb__DashboardMessageResponse **info;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type lb:DashboardMessageResponse */
};
#endif

#ifndef SOAP_TYPE_lb__getAllDashboardMessage
#define SOAP_TYPE_lb__getAllDashboardMessage (235)
/* lb:getAllDashboardMessage */
struct lb__getAllDashboardMessage
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (236)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (237)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (239)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (242)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (243)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__wstring
#define SOAP_TYPE_xsd__wstring (10)
typedef wchar_t *xsd__wstring;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (12)
typedef enum _Enum_1 xsd__boolean;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (13)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (15)
typedef double xsd__double;
#endif

#ifndef SOAP_TYPE_patient_info
#define SOAP_TYPE_patient_info (211)
typedef struct lb__InpatientlistInfo patient_info;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 lb__wsPing(struct soap*, int *pingok);

SOAP_FMAC5 int SOAP_FMAC6 lb__action(struct soap*, struct LB_PairArray *cmd, struct lb__Response **resp);

SOAP_FMAC5 int SOAP_FMAC6 lb__getSystemInfo(struct soap*, struct lb__SystemInfo **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getCallLogInfo(struct soap*, struct lb__CallLogQuery *query, struct lb__CallLogInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getDepartmentInfo(struct soap*, struct lb__DepartmentInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getTypeInfo(struct soap*, struct lb__TypeInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getDoctorInfo(struct soap*, struct lb__DoctorInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getNurseInfo(struct soap*, struct lb__NurseInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getDutyInfo(struct soap*, struct lb__DutyInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getPatientInfo(struct soap*, char *last_query_time, char *department_list, int department_size, struct lb__PatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getItemInfo(struct soap*, struct lb__ItemInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getInspPatientInfo(struct soap*, char *last_query_time, char *item_list, int item_size, struct lb__InspPatientInfoResponse **InspPatientInfo);

SOAP_FMAC5 int SOAP_FMAC6 lb__getInspRoomInfo(struct soap*, struct lb__InspRoomInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getInspDeviceInfo(struct soap*, struct lb__InspDeviceInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getInpatientKeyInfo(struct soap*, struct lb__InpatientKeyInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getInpatientInfo(struct soap*, char *last_query_time, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getZoneInpatientInfo(struct soap*, char *last_query_time, int zone_number, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getRoomInpatientInfo(struct soap*, char *last_query_time, int zone_number, char *room_number_list, int room_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getBedInpatientInfo(struct soap*, char *last_query_time, int zone_number, char *bed_number_list, int bed_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getZoneAllInpatientInfo(struct soap*, int zone_number, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getAllRoomInpatientInfo(struct soap*, int zone_number, char *room_number_list, int room_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getAllBedInpatientInfo(struct soap*, int zone_number, char *bed_number_list, int bed_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getZoneAllInpatientId(struct soap*, int zone_number, struct lb__InpatientIdResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getAllRoomInpatientId(struct soap*, int zone_number, char *room_number_list, int room_number_size, struct lb__InpatientIdResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getAllBedInpatientId(struct soap*, int zone_number, char *bed_number_list, int bed_number_size, struct lb__InpatientIdResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getAllDashboardData(struct soap*, struct lb__DashboardDataResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 lb__getAllDashboardMessage(struct soap*, struct lb__DashboardMessageResponse **info);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__wsPing(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__action(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getSystemInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getCallLogInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getDepartmentInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getTypeInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getDoctorInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getNurseInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getDutyInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getPatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getItemInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getInspPatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getInspRoomInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getInspDeviceInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getInpatientKeyInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getZoneInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getRoomInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getBedInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getZoneAllInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getAllRoomInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getAllBedInpatientInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getZoneAllInpatientId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getAllRoomInpatientId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getAllBedInpatientId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getAllDashboardData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_lb__getAllDashboardMessage(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__wsPing(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *pingok);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__action(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct LB_PairArray *cmd, struct lb__Response **resp);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getSystemInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__SystemInfo **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getCallLogInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__CallLogQuery *query, struct lb__CallLogInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getDepartmentInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__DepartmentInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getTypeInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__TypeInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getDoctorInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__DoctorInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getNurseInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__NurseInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getDutyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__DutyInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getPatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *last_query_time, char *department_list, int department_size, struct lb__PatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getItemInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__ItemInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getInspPatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *last_query_time, char *item_list, int item_size, struct lb__InspPatientInfoResponse **InspPatientInfo);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getInspRoomInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__InspRoomInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getInspDeviceInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__InspDeviceInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getInpatientKeyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__InpatientKeyInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *last_query_time, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getZoneInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *last_query_time, int zone_number, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getRoomInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *last_query_time, int zone_number, char *room_number_list, int room_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getBedInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *last_query_time, int zone_number, char *bed_number_list, int bed_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getZoneAllInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, int zone_number, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getAllRoomInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, int zone_number, char *room_number_list, int room_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getAllBedInpatientInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, int zone_number, char *bed_number_list, int bed_number_size, struct lb__InpatientInfoResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getZoneAllInpatientId(struct soap *soap, const char *soap_endpoint, const char *soap_action, int zone_number, struct lb__InpatientIdResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getAllRoomInpatientId(struct soap *soap, const char *soap_endpoint, const char *soap_action, int zone_number, char *room_number_list, int room_number_size, struct lb__InpatientIdResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getAllBedInpatientId(struct soap *soap, const char *soap_endpoint, const char *soap_action, int zone_number, char *bed_number_list, int bed_number_size, struct lb__InpatientIdResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getAllDashboardData(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__DashboardDataResponse **info);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_lb__getAllDashboardMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct lb__DashboardMessageResponse **info);

#ifdef __cplusplus
}
#endif

#endif

/* End of lonbon_webserviceStub.h */
