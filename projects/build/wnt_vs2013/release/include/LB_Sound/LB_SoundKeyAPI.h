#ifndef _LB_SOUNDKEYAPI_H_
#define _LB_SOUNDKEYAPI_H_
#include <ss_base/ss_base.h>
#include "LB_Sound.h"
#include "LB_SoundKey.h"


/************************************************************************
   加密声卡初始化,必须第一个调用
	返回值：0 -- 成功 -1 -- 失败
************************************************************************/
SS_API int LBKEY_init();

/************************************************************************
加密声卡初始化,必须第一个调用
参数： timeout_in_seconds -- 超时时间，单位秒
返回值：0 -- 成功 -1 -- 失败
************************************************************************/
SS_API int LBKEY_reinit(int timeout_in_seconds);

/************************************************************************
加密声卡卸载,必须最后调用
返回值：0 -- 成功 -1 -- 失败
************************************************************************/
SS_API int LBKEY_uninit();

/************************************************************************
检查是否连接加密声卡
返回值：TRUE -- 连接  FALSE -- 未连接
************************************************************************/
SS_API BOOL LBKEY_isConnected();

/************************************************************************
读取加密声卡ID
参数： id
返回值：0 -- 成功 -1 -- 失败
************************************************************************/
SS_API int LBKEY_getId(unsigned long *id);

/************************************************************************
检查加密声卡ID
参数： id
返回值：0 -- 成功 -1 -- 失败
************************************************************************/
SS_API BOOL LBKEY_checkId(unsigned long id);

/************************************************************************
获取加密声卡Flash
返回值：Flash
************************************************************************/
SS_API SS_Flash* LBKEY_getFlash();

/************************************************************************
设置加密声卡的状态
参数： state -- 当前状态，取值：
	LB_SOUND_IDLE = 0,			// 待机
	LB_SOUND_CALLIN,			// 呼叫
	LB_SOUND_TALK,				// 通话
	LB_SOUND_ERR,				// 异常
	LB_SOUND_MIC_CLOSE = 100,	// 关闭MIC
	LB_SOUND_MIC_OPEN,			// 打开MIC
	LB_SOUND_SPEAKER_CLOSE,		// 关闭声音
	LB_SOUND_SPEAKER_OPEN,		// 打开声音

返回值：0 -- 成功 -1 -- 失败
************************************************************************/
SS_API int LBKEY_setState(LB_SOUND_STATE state);

/************************************************************************
获取加密声卡的按键状态
返回值：char
		-1 -- 读写错误
		 0 -- 空闲
		>0 -- 有按键触发，用低四位表示四个按键，每一位1表示按下，0表示抬起
************************************************************************/
SS_API char LBKEY_getKeyState();

#endif //_LB_SOUNDKEYAPI_H_

