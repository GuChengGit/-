#ifndef  _LB_LOCAL_TABLES_
#define  _LB_LOCAL_TABLES_
#include "mydb.h"

#define SQL_CREATE_TABLE_V_BASE_INFO "CREATE TABLE IF NOT EXISTS v_base_info (\
ID integer primary key AUTO_INCREMENT,\
UPDATE_TIME timestamp ,\
DB_VER integer not null default 0 ,\
SOFTWARE_VER varchar(32) ,\
AUDIO_PATH varchar(255),\
PRISINOR_PHOTO_PATH varchar(255),\
FAMIFY_PHOTO_PATH varchar(255),\
REG_IMAGE_PATH varchar(255))"

#define SQL_CREATE_TABLE_V_BRANCH "CREATE TABLE IF NOT EXISTS v_branch (\
BRANCH_NAME varchar(32) PRIMARY KEY )"

#define SQL_CREATE_TABLE_V_USER "CREATE TABLE IF NOT EXISTS v_user (\
USERNAME varchar(32) PRIMARY KEY,\
PASSWORD varchar(32) not null,\
NAME varchar(32) not null,\
IS_LOGIN integer not null default 0,\
LOGIN_IP varchar(32) ,\
MANAGE_GROUP varchar(32) not null,\
BRANCH_LIST varchar(255))"


#define SQL_CREATE_TABLE_V_MANAGE_GROUP  "CREATE TABLE IF NOT EXISTS  v_manage_group(\
MANAGE_GROUP varchar(32) PRIMARY KEY,\
M_CHECKIN integer not null default 0,\
M_APPROVE integer not null default 0,\
M_POINT integer not null default 0,\
M_MONITER integer not null default 0,\
M_PRISONER integer not null default 0,\
M_BRANCH integer not null default 0,\
M_LEVER integer not null default 0,\
M_USER integer not null default 0,\
M_SETTING integer not null default 0,\
M_RECORD integer not null default 0,\
M_LOG integer not null default 0)"

#define SQL_CREATE_TABLE_V_VISIT_OPERATION "CREATE TABLE IF NOT EXISTS  v_visit_operation(\
ID integer primary key AUTO_INCREMENT,\
TIME timestamp,\
USERNAME varchar(32) not null,\
OPRATE integer not null,\
VISIT_ID integer not null,\
DETAIL varchar(255),\
MESSAGE TEXT)"

#define SQL_CREATE_TABLE_V_VISIT "CREATE TABLE IF NOT EXISTS  v_visit(\
VISIT_ID integer primary key AUTO_INCREMENT,\
PRISONER_CODE varchar(32) not null,\
VISIT_STATE integer not null default 0,\
PRISONER_STATE integer not null default 0,\
FAMILY_STATE integer not null default 0,\
BRANCH_NAME varchar(32) not null,\
WINDOW_NUM integer not null default 0,\
MEET_LEVEL varchar(32) not null,\
MEET_LENGTH integer not null default 30,\
LAST_TIME TIMESTAMP,\
TICKET_NUM varchar(32),\
MEET_START_TIME datetime,\
MEET_END_TIME datetime,\
AUDIO_FILE varchar(255))"

#define SQL_CREATE_TABLE_V_VISIT_FAMILY "CREATE TABLE IF NOT EXISTS  v_visit_family(\
ID integer PRIMARY key AUTO_INCREMENT,\
VISIT_ID integer not null,\
FAMILY_CODE varchar(32) not null,\
REG_IMAGE_FILE varchar(255))"

#define SQL_CREATE_TABLE_V_PRISONER "CREATE TABLE IF NOT EXISTS  v_prisoner(\
ID  integer primary key AUTO_INCREMENT,\
PRISONER_CODE varchar(32) not null,\
PRISONER_NAME varchar(32) not null,\
BRANCH_NAME varchar(32) not null,\
PRISON_ROOM varchar(32),\
PHOTO_FILE varchar(255),\
ID_CARD_NUM varchar(32),\
ADDRESS varchar(32),\
IC_CARD varchar(32),\
MEET_THIS_MONTH integer not null default 0,\
MEET_FORBIDDEN integer not null default 0,\
CRIMINAL_RECORD TEXT,\
PENAL_RECORD TEXT,\
PRISONER_LEVEL varchar(32))"

#define SQL_CREATE_TABLE_V_PRISON_LEVEL "CREATE TABLE IF NOT EXISTS  v_prison_level(\
ID INTEGER PRIMARY KEY AUTO_INCREMENT,\
PRISON_LEVEL VARCHAR(32) NOT NULL,\
PRISONER_CODE VARCHAR(32),\
MEET_PER_MONTH INTEGER NOT NULL DEFAULT 1,\
LENGTH_PER_MEET INTEGER NOT NULL DEFAULT 30,\
APPROVE_MODE INTEGER NOT NULL DEFAULT 0,\
APPROVE_LIST VARCHAR(255),\
MEET_LEVEL VARCHAR(32),\
KEY_MONITOR INTEGER NOT NULL DEFAULT 0)"

#define SQL_CREATE_TABLE_V_MEET_LEVEL "CREATE TABLE IF NOT EXISTS  v_meet_level(\
MEET_LEVEL VARCHAR(32) PRIMARY KEY NOT NULL)"

#define SQL_CREATE_TABLE_V_WINDOW "CREATE TABLE IF NOT EXISTS  v_window(\
ID INTEGER PRIMARY KEY AUTO_INCREMENT,\
BRANCH_NAME VARCHAR(32) NOT NULL,\
WINDOW_NUM  INTEGER NOT NULL,\
MEET_LEVEL VARCHAR(32),\
WINDOW_STATE INTEGER NOT NULL DEFAULT 0)"

#define SQL_CREATE_TABLE_V_FAMILY "CREATE TABLE IF NOT EXISTS  v_family(\
ID INTEGER PRIMARY KEY AUTO_INCREMENT,\
FAMILY_CODE VARCHAR(32) NOT NULL ,\
FAMILY_NAME VARCHAR(32) NOT NULL,\
SEX VARCHAR(8) ,\
AGE INTEGER NOT NULL DEFAULT 0,\
PHOTO_FILE VARCHAR(255),\
ID_CARD_NUM VARCHAR(32),\
IC_CARD VARCHAR(32),\
ADDRESS VARCHAR(32),\
TELEPHONE VARCHAR(32))"

#define SQL_CREATE_TABLE_V_RELATIONSHIP "CREATE TABLE IF NOT EXISTS  v_relationship(\
ID INTEGER PRIMARY KEY AUTO_INCREMENT,\
PRISONER_CODE VARCHAR(32) NOT NULL,\
FAMILY_CODE VARCHAR(32) NOT NULL,\
RELATIONSHIP VARCHAR(32) NOT NULL)"

#define SQL_CREATE_TABLE_V_RELATIONSHIP_LIST "CREATE TABLE IF NOT EXISTS  v_relationship_list(RELATIONSHIP VARCHAR(32) NOT NULL)"

#define SQL_CREATE_TABLE_V_APPOINTMENT "CREATE TABLE IF NOT EXISTS  v_appointment(\
APPOINT_CODE VARCHAR(32) NOT NULL ,\
PRISONER_CODE VARCHAR(32) NOT NULL,\
FAMILY_ID_CARD VARCHAR(32),\
START_TIME DATETIME,\
END_TIME DATETIME,\
NEED_CHECKIN INTEGER NOT NULL DEFAULT 1,\
NEED_APPROVE INTEGER NOT NULL DEFAULT 0)"



// v_base_info
typedef enum
{
	BASE_INFO__ID=0,
	UPDATE_TIME,
	DB_VER,
	SOFTWARE_VER,
	AUDIO_PATH,
	PRISINOR_PHOTO_PATH,
	FAMIFY_PHOTO_PATH,
	REG_IMAGE_PATH,
};
//v_branch
typedef enum
{
	BRANCH_NAME=0
};

//V_User
typedef enum
{
	USER__USERNAME =0,
	PASSWORD,
	NAME,
	IS_LOGIN,
	LOGIN_IP,
	MANAGE_GROUP,
	BRANCH_LIST
};

//v_manage_group
typedef enum
{
	M__MANAGE_GROUP=0,
	M_CHECKIN,
	M_APPROVE,
	M_POINT,
	M_MONITER,
	M_PRISONER,
	M_BRANCH,
	M_LEVER,
	M_USER,
	M_SETTING,
	M_RECORD,
	M_LOG
};

//v_visit_operation
typedef enum
{
	VISIT_OPERATION__ID=0,
	TIME,
	USERNAME,
	OPRATE,
	VISIT_OPRATION_VISIT_ID,
	DETAIL,
	MESSAGE
	
};
//v_visit
typedef enum
{
	VISIT_ID=0,
	PRISONER_CODE,
	VISIT_STATE,
	PRISONER_STATE,
	FAMILY_STATE,
	VISIT_BRANCH_NAME,
	WINDOW_NUM,
	VISIT_MEET_LEVEL,
	MEET_LENGTH,
	LAST_TIME,
	TICKET_NUM,
	MEET_START_TIME,
	MEET_END_TIME,
	AUDIO_FILE

};

//v_visit_family
typedef enum
{
	VISIT_FAMILY__ID=0,
	VISIT_FAMILY__VISIT_ID,
	FAMILY_CODE,
	REG_IMAGE_FILE
};

//v_prisoner
typedef enum
{
	PRISONER__ID=0,
	PRISONER__PRISONER_CODE,
	PRISONER__PRISONER_NAME,
	PRISONER__BRANCH_NAME,
	PRISON_ROOM,
	PHOTO_FILE,
	ID_CARD_NUM,
	ADDRESS,
	IC_CARD,
	MEET_THIS_MONTH,
	MEET_FORBIDDEN,
	CRIMINAL_RECORD,
	PENAL_RECORD,
	PRISONER_LEVEL
};
//v_prison_level
typedef enum
{
	PRISON_LEVEL__ID=0,
	PRISON_LEVEL,
	PRISON_LEVEL__PRISONER_CODE,
	MEET_PER_MONTH,
	LENGTH_PER_MEET,
	APPROVE_MODE,
	APPROVE_LIST,
	PRISON_LEVEL__MEET_LEVEL,
	KEY_MONITOR,
};

//v_meet_level
typedef enum
{
	MEET_LEVEL=0
};
//v_window
typedef enum
{
	WINDOW__ID=0,
	WINDOW__BRANCH_NAME,
	WINDOW__WINDOW_NUM,
	WINDOW__MEET_LEVEL,
	WINDOW__WINDOW_STATE
};
//v_family
typedef enum
{
	F__ID=0,
	F__FAMILY_CODE,
	F__FAMILY_NAME,
	F__SEX,
	F__AGE,
	F__PHOTO_FILE,
	F__ID_CARD_NUM,
	F__IC_CARD,
	F__ADDRESS,
	F__TELEPHONE
};
//v_relationship
typedef enum
{
	RELATIONSHIP__ID=0,
	RELATIONSHIP__PRISONER_CODE,
	RELATIONSHIP__FAMILY_CODE,
	RELATIONSHIP__RELATIONSHIP
};
//v_relationship_list
typedef enum
{
	RELATIONSHIP
};
//v_appointment
typedef enum
{
	APPOINT_CODE=0,
	APPOINTMENT_PRISONER_CODE,
	FAMILY_ID_CARD,
	START_TIME,
	END_TIME,
	NEED_CHECKIN,
	NEED_APPROVE
};

SS_API int CreateTable(MYDB *mydb);

#endif